FROM ubuntu:18.04
ENV TZ=Europe/Berlin

RUN apt-get -y update
RUN apt-get -y install iputils-ping curl vim libgtk2.0-0 gconf-service libxext6 \
  libxfixes3 libxi6 libxrandr2 libxrender1 libcairo2 libcups2 libdbus-1-3 libexpat1 \
  libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 \
  libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 \
  libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxss1 libxtst6 libappindicator1 \
  libnss3 libasound2 libatk1.0-0 libc6 ca-certificates fonts-liberation lsb-release \
  xdg-utils wget apt-transport-https software-properties-common  adduser libfontconfig1 \
  libgbm-dev

RUN apt-get install dialog apt-utils -y

# Install Node, NPM and Puppeteer
RUN curl -sL https://deb.nodesource.com/setup_10.x | bash - && apt install -y nodejs
RUN useradd -m -p password pi
RUN su - pi -c "npm init -y && npm install puppeteer"

#Install Grafana
RUN wget https://dl.grafana.com/oss/release/grafana_7.0.2_amd64.deb &&  dpkg -i grafana_7.0.2_amd64.deb && update-rc.d grafana-server defaults

#Install Graphite & Carbon
RUN apt-get -y install python-pip
RUN apt-get install -y python-dev libcairo2-dev libffi-dev build-essential
RUN pip install --no-binary=:all: https://github.com/graphite-project/whisper/tarball/master
RUN pip install --no-binary=:all: https://github.com/graphite-project/carbon/tarball/master
RUN pip install --no-binary=:all: https://github.com/graphite-project/graphite-web/tarball/master
RUN pip install graphite-api

RUN bash -c 'echo CARBON_CACHE_ENABLED=true >  /etc/default/graphite-carbon'
RUN cd /opt/graphite/conf && cp carbon.conf.example carbon.conf && cp storage-schemas.conf.example storage-schemas.conf
#RUN echo [garbage_collection] \n\
#pattern = garbageCollections$ \n\
#retentions = 10s:14d > /opt/graphite/conf/storage-schemas.conf
RUN bash -c 'echo "CARBON_CACHE_ENABLED=true" > /etc/default/graphite-carbon'
RUN /opt/graphite/bin/carbon-cache.py start

RUN apt-get install -y nginx
RUN touch /var/log/nginx/graphite.access.log && touch /var/log/nginx/graphite.error.log
RUN chmod 640 /var/log/nginx/graphite.* && chown www-data:www-data /var/log/nginx/graphite.*
RUN echo "upstream graphite { \n\
    server 127.0.0.1:8080 fail_timeout=0; \n\
} \n\
server { \n\
    listen 80 default_server; \n\
    server_name HOSTNAME; \n\
    root /opt/graphite/webapp; \n\
    access_log /var/log/nginx/graphite.access.log; \n\
    error_log  /var/log/nginx/graphite.error.log; \n\
    location = /favicon.ico { \n\
        return 204; \n\
    } \n\
    location /static { \n\
        alias /opt/graphite/webapp/content; \n\
        expires max; \n\
    } \n\
    location / { \n\
        try_files \$uri @graphite; \n\
    } \n\
    location @graphite { \n\
        proxy_pass_header Server; \n\
        proxy_set_header Host $http_host; \n\
        proxy_redirect off; \n\
        proxy_set_header X-Real-IP \$remote_addr; \n\
        proxy_set_header X-Scheme \$scheme; \n\
        proxy_connect_timeout 10; \n\
        proxy_read_timeout 10; \n\
        proxy_pass http://graphite; \n\
    } \n\
}" > /etc/nginx/sites-available/graphite
RUN cat /etc/nginx/sites-available/graphite
RUN ln -s /etc/nginx/sites-available/graphite /etc/nginx/sites-enabled && rm -f /etc/nginx/sites-enabled/default && update-rc.d nginx defaults



#COPY start.sh /start.sh
CMD /bin/bash -c "/opt/graphite/bin/carbon-cache.py start && service grafana-server start && ping 127.0.0.1"
